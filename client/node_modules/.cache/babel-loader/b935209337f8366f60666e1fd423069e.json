{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\SkrallGames\\\\client\\\\src\\\\pages\\\\skrallgaming\\\\Thornament.js\";\nimport React, { useEffect, useState } from \"react\"; //import { Radar } from \"react-chartjs-2\";\n\nimport usePlayers from \"../../hooks/skrallgaming/usePlayers\";\nimport playersArray from \"../../globals/skrallgaming/players\";\nimport placings from \"../../globals/skrallgaming/placings\";\nimport \"../../assets/style/skrallgaming/thornament.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Thornament() {\n  const teams = {\n    \"Fizzle My Nizzle\": [\"Mikka\", \"R\"],\n    \"Bramers\": [\"Acrid\", \"Lexclusive\"],\n    \"NextGen\": [\"Barre\", \"YOLOwille\"],\n    \"IDK\": [\"Zeor\", \"Finch\"],\n    \"Deltalux\": [\"Eb0la\", \"Avvan\"],\n    \"Raindrops\": [\"Jäger\", \"Jarmo\"]\n  };\n  const matches = [[\"Fizzle My Nizzle\", \"Bramers\"], [\"Fizzle My Nizzle\", \"NextGen\"], [\"Bramers\", \"NextGen\"], [\"IDK\", \"Deltalux\"], [\"Raindrops\", \"Bramers\"], [\"IDK\", \"Fizzle My Nizzle\"]];\n\n  const teamColor = teamName => {\n    // let hash = 0;\n    // for (let i = 0; i < teamName.length; i++) {\n    //     hash = teamName.charCodeAt(i) + ((hash << 5) - hash);\n    //     hash = hash & hash;\n    // }\n    // return hash % 360\n    let teamsArr = Object.keys(teams);\n    let c = teamsArr.findIndex(t => t === teamName);\n    return Math.round(c / teamsArr.length * 360);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ulkeeper\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: matches.map((match, index) => {\n            console.log(match[0], teamColor(match[0]), match[1], teamColor(match[1]));\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => alert(\"tja\"),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"matchcount\",\n                children: [\"MATCH \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teambody\",\n                style: {\n                  background: `hsl(${teamColor(match[0])}, 100%, 24%)`,\n                  boxShadow: `inset 12px 12px 12px hsl(${teamColor(match[0])}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match[0])}, 100%, 29%)`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamplayers\",\n                  children: teams[match[0]].map(p => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: p\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 60\n                    }, this);\n                  }) //teams[match[0]].map(p => {console.log(p)})\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamname \",\n                  children: match[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scorebody\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teambody\",\n                style: {\n                  background: `hsl(${teamColor(match[1])}, 100%, 24%)`,\n                  boxShadow: `inset 12px 12px 12px hsl(${teamColor(match[1])}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match[1])}, 100%, 29%)`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamname\",\n                  children: match[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamplayers\",\n                  children: teams[match[1]].map(p => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: p\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 60\n                    }, this);\n                  }) //teams[match[0]].map(p => {console.log(p)})\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Thornament;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thornament\");","map":{"version":3,"names":["React","useEffect","useState","usePlayers","playersArray","placings","Thornament","teams","matches","teamColor","teamName","teamsArr","Object","keys","c","findIndex","t","Math","round","length","map","match","index","console","log","alert","background","boxShadow","p"],"sources":["C:/Git/SkrallGames/client/src/pages/skrallgaming/Thornament.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n//import { Radar } from \"react-chartjs-2\";\r\nimport usePlayers from \"../../hooks/skrallgaming/usePlayers\";\r\nimport playersArray from \"../../globals/skrallgaming/players\"\r\nimport placings from \"../../globals/skrallgaming/placings\"\r\nimport \"../../assets/style/skrallgaming/thornament.css\"\r\n\r\nexport default function Thornament(){\r\n\r\n    const teams = {\r\n        \"Fizzle My Nizzle\": [\"Mikka\", \"R\"],\r\n        \"Bramers\": [\"Acrid\", \"Lexclusive\"],\r\n        \"NextGen\": [\"Barre\", \"YOLOwille\"],\r\n        \"IDK\": [\"Zeor\", \"Finch\"],\r\n        \"Deltalux\": [\"Eb0la\", \"Avvan\"],\r\n        \"Raindrops\": [\"Jäger\", \"Jarmo\"],\r\n    }\r\n\r\n    const matches = [\r\n        [\"Fizzle My Nizzle\", \"Bramers\"],\r\n        [\"Fizzle My Nizzle\", \"NextGen\"],\r\n        [\"Bramers\", \"NextGen\"],\r\n        [\"IDK\", \"Deltalux\"],\r\n        [\"Raindrops\", \"Bramers\"],\r\n        [\"IDK\", \"Fizzle My Nizzle\"],\r\n    ]\r\n    \r\n    const teamColor = (teamName) => {\r\n        // let hash = 0;\r\n        // for (let i = 0; i < teamName.length; i++) {\r\n        //     hash = teamName.charCodeAt(i) + ((hash << 5) - hash);\r\n        //     hash = hash & hash;\r\n        // }\r\n        // return hash % 360\r\n        let teamsArr = Object.keys(teams)\r\n        let c = teamsArr.findIndex(t => t === teamName)\r\n        return Math.round(c / teamsArr.length * 360)\r\n    }\r\n\r\n    return <>        \r\n        <div className=\"body\">\r\n            <div className=\"ulkeeper\">\r\n                <ul>\r\n                    {\r\n                        matches.map((match, index) => {\r\n                            console.log(match[0], teamColor(match[0]), match[1], teamColor(match[1]))\r\n                            return <li onClick={() => alert(\"tja\")}>\r\n                                    <span className=\"matchcount\">MATCH {index+1}</span>\r\n                                    <div className=\"teambody\" style={{\r\n                                        background: `hsl(${teamColor(match[0])}, 100%, 24%)`,\r\n                                        boxShadow: `inset 12px 12px 12px hsl(${teamColor(match[0])}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match[0])}, 100%, 29%)`,\r\n                                    }}>\r\n                                        <div className=\"teamplayers\">\r\n                                            {\r\n                                                teams[match[0]].map(p => {                                                    \r\n                                                    return <p>{p}</p>\r\n                                                })\r\n                                                //teams[match[0]].map(p => {console.log(p)})\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"teamname \">{match[0]}</div>\r\n                                    </div>\r\n                                    <div className=\"scorebody\">\r\n                                        <div className=\"score input\"></div>\r\n                                        <div className=\"score input\"></div>\r\n                                        <div className=\"score input\"></div> \r\n                                            {/* {(index === 0 ? '1 - 2': index === 1 ? '🔥': '⏳')} */}                                        \r\n                                    </div>\r\n                                    <div className=\"teambody\" style={{\r\n                                        background: `hsl(${teamColor(match[1])}, 100%, 24%)`,\r\n                                        boxShadow: `inset 12px 12px 12px hsl(${teamColor(match[1])}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match[1])}, 100%, 29%)`,\r\n                                    }}>\r\n                                        <div className=\"teamname\">{match[1]}</div>\r\n                                        <div className=\"teamplayers\">\r\n                                            {\r\n                                                teams[match[1]].map(p => {\r\n                                                    return <p>{p}</p>\r\n                                                })\r\n                                                //teams[match[0]].map(p => {console.log(p)})\r\n                                            }\r\n                                        </div>\r\n                                    </div>           \r\n                            </li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}