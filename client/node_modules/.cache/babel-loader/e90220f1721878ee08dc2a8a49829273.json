{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\SkrallGames\\\\client\\\\src\\\\pages\\\\skrallgaming\\\\Thornament.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; //import { Radar } from \"react-chartjs-2\";\n\nimport usePlayers from \"../../hooks/skrallgaming/usePlayers\";\nimport playersArray from \"../../globals/skrallgaming/players\";\nimport placings from \"../../globals/skrallgaming/placings\";\nimport \"../../assets/style/skrallgaming/thornament.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Thornament() {\n  _s();\n\n  const {\n    matches,\n    setMatches\n  } = useState([{\n    \"team1\": \"Fizzle My Nizzle\",\n    \"team2\": \"Bramers\",\n    \"bo\": 3,\n    \"gameResults\": []\n  }, {\n    \"team1\": \"Fizzle My Nizzle\",\n    \"team2\": \"NextGen\",\n    \"bo\": 3,\n    \"gameResults\": []\n  }, {\n    \"team1\": \"NextGen\",\n    \"team2\": \"Bramers\",\n    \"bo\": 3,\n    \"gameResults\": []\n  }, {\n    \"team1\": \"IDK\",\n    \"team2\": \"Deltalux\",\n    \"bo\": 3,\n    \"gameResults\": []\n  }, {\n    \"team1\": \"Fizzle My Nizzle\",\n    \"team2\": \"Bramers\",\n    \"bo\": 3,\n    \"gameResults\": []\n  }, {\n    \"team1\": \"IDK\",\n    \"team2\": \"Fizzle My Nizzle\",\n    \"bo\": 3,\n    \"gameResults\": []\n  }]);\n  const teams = {\n    \"Fizzle My Nizzle\": [\"Mikka\", \"R\"],\n    \"Bramers\": [\"Acrid\", \"Lexclusive\"],\n    \"NextGen\": [\"Barre\", \"YOLOwille\"],\n    \"IDK\": [\"Zeor\", \"Finch\"],\n    \"Deltalux\": [\"Eb0la\", \"Avvan\"],\n    \"Raindrops\": [\"Jäger\", \"Jarmo\"]\n  };\n\n  const teamColor = teamName => {\n    // let hash = 0;\n    // for (let i = 0; i < teamName.length; i++) {\n    //     hash = teamName.charCodeAt(i) + ((hash << 5) - hash);\n    //     hash = hash & hash;\n    // }\n    // return hash % 360\n    let teamsArr = Object.keys(teams);\n    let c = teamsArr.findIndex(t => t === teamName);\n    return Math.round(c / teamsArr.length * 360);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ulkeeper\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: matches.map((match, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"matchcount\",\n                children: [\"MATCH \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teambody\",\n                onClick: () => alert(\"tja\"),\n                style: {\n                  background: `hsl(${teamColor(match.team1)}, 100%, 24%)`,\n                  boxShadow: `inset 12px 12px 12px hsl(${teamColor(match.team1)}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match.team1)}, 100%, 29%)`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamplayers\",\n                  children: teams[match.team1].map(p => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: p\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 60\n                    }, this);\n                  }) //teams[match[0]].map(p => {console.log(p)})\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamname \",\n                  children: match.team1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scorebody\",\n                children: matches.gameResults.map(gr => {\n                  if (gr !== undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: () => alert(\"tja\"),\n                    className: \"score\",\n                    style: {\n                      background: `hsl(${teamColor(match[`team${gr}`])}, 100%, 24%)`,\n                      boxShadow: `inset 8px 8px 8px hsl(${teamColor(match[`team${gr}`])}, 100%, 15%), inset -8px -8px 8px hsl(${teamColor(match[`team${gr}`])}, 100%, 29%)`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 56\n                  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 57\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teambody\",\n                style: {\n                  background: `hsl(${teamColor(match.team2)}, 100%, 24%)`,\n                  boxShadow: `inset 12px 12px 12px hsl(${teamColor(match.team2)}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match.team2)}, 100%, 29%)`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamname\",\n                  children: match.team2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamplayers\",\n                  children: teams[match.team2].map(p => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: p\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 60\n                    }, this);\n                  }) //teams[match[0]].map(p => {console.log(p)})\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Thornament, \"tDyuJafr5UpKKjLwRFBgTanHdi0=\");\n\n_c = Thornament;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thornament\");","map":{"version":3,"names":["React","useEffect","useState","usePlayers","playersArray","placings","Thornament","matches","setMatches","teams","teamColor","teamName","teamsArr","Object","keys","c","findIndex","t","Math","round","length","map","match","index","alert","background","team1","boxShadow","p","gameResults","gr","undefined","team2"],"sources":["C:/Git/SkrallGames/client/src/pages/skrallgaming/Thornament.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n//import { Radar } from \"react-chartjs-2\";\r\nimport usePlayers from \"../../hooks/skrallgaming/usePlayers\";\r\nimport playersArray from \"../../globals/skrallgaming/players\"\r\nimport placings from \"../../globals/skrallgaming/placings\"\r\nimport \"../../assets/style/skrallgaming/thornament.css\"\r\n\r\nexport default function Thornament(){\r\n\r\n    const { matches, setMatches } = useState([\r\n        {\"team1\": \"Fizzle My Nizzle\", \"team2\": \"Bramers\", \"bo\": 3, \"gameResults\":[]},\r\n        {\"team1\": \"Fizzle My Nizzle\", \"team2\": \"NextGen\", \"bo\": 3, \"gameResults\":[]},\r\n        {\"team1\": \"NextGen\", \"team2\": \"Bramers\", \"bo\": 3, \"gameResults\":[]},\r\n        {\"team1\": \"IDK\", \"team2\": \"Deltalux\", \"bo\": 3, \"gameResults\":[]},\r\n        {\"team1\": \"Fizzle My Nizzle\", \"team2\": \"Bramers\", \"bo\": 3, \"gameResults\":[]},\r\n        {\"team1\": \"IDK\", \"team2\": \"Fizzle My Nizzle\", \"bo\": 3, \"gameResults\":[]}\r\n    ])\r\n\r\n    const teams = {\r\n        \"Fizzle My Nizzle\": [\"Mikka\", \"R\"],\r\n        \"Bramers\": [\"Acrid\", \"Lexclusive\"],\r\n        \"NextGen\": [\"Barre\", \"YOLOwille\"],\r\n        \"IDK\": [\"Zeor\", \"Finch\"],\r\n        \"Deltalux\": [\"Eb0la\", \"Avvan\"],\r\n        \"Raindrops\": [\"Jäger\", \"Jarmo\"],\r\n    }\r\n    \r\n    const teamColor = (teamName) => {\r\n        // let hash = 0;\r\n        // for (let i = 0; i < teamName.length; i++) {\r\n        //     hash = teamName.charCodeAt(i) + ((hash << 5) - hash);\r\n        //     hash = hash & hash;\r\n        // }\r\n        // return hash % 360\r\n        let teamsArr = Object.keys(teams)\r\n        let c = teamsArr.findIndex(t => t === teamName)\r\n        return Math.round(c / teamsArr.length * 360)\r\n    }\r\n\r\n    return <>        \r\n        <div className=\"body\">\r\n            <div className=\"ulkeeper\">\r\n                <ul>\r\n                    {\r\n                        matches.map((match, index) => {\r\n                            return <li>\r\n                                    <span className=\"matchcount\">MATCH {index+1}</span>\r\n                                    <div className=\"teambody\" onClick={() => alert(\"tja\")} style={{\r\n                                        background: `hsl(${teamColor(match.team1)}, 100%, 24%)`,\r\n                                        boxShadow: `inset 12px 12px 12px hsl(${teamColor(match.team1)}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match.team1)}, 100%, 29%)`,\r\n                                    }}>\r\n                                        <div className=\"teamplayers\">\r\n                                            {\r\n                                                teams[match.team1].map(p => {                                                    \r\n                                                    return <p>{p}</p>\r\n                                                })\r\n                                                //teams[match[0]].map(p => {console.log(p)})\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"teamname \">{match.team1}</div>\r\n                                    </div>\r\n                                    <div className=\"scorebody\">\r\n                                        {matches.gameResults.map(gr => {\r\n                                            if (gr !== undefined)\r\n                                                return <div onClick={() => alert(\"tja\")} className=\"score\" style={{\r\n                                                    background: `hsl(${teamColor(match[`team${gr}`])}, 100%, 24%)`,\r\n                                                    boxShadow: `inset 8px 8px 8px hsl(${teamColor(match[`team${gr}`])}, 100%, 15%), inset -8px -8px 8px hsl(${teamColor(match[`team${gr}`])}, 100%, 29%)`,\r\n                                                }}></div>\r\n                                            else return <div className=\"score\"></div> \r\n                                        })\r\n                                        }                                        \r\n                                        {/* <div className=\"score\"></div>\r\n                                        <div className=\"score\"></div> \r\n                                        <div className=\"score\"></div>  */}\r\n                                            {/* {(index === 0 ? '1 - 2': index === 1 ? '🔥': '⏳')} */}                                        \r\n                                    </div>\r\n                                    <div className=\"teambody\" style={{\r\n                                        background: `hsl(${teamColor(match.team2)}, 100%, 24%)`,\r\n                                        boxShadow: `inset 12px 12px 12px hsl(${teamColor(match.team2)}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match.team2)}, 100%, 29%)`,\r\n                                    }}>\r\n                                        <div className=\"teamname\">{match.team2}</div>\r\n                                        <div className=\"teamplayers\">\r\n                                            {\r\n                                                teams[match.team2].map(p => {\r\n                                                    return <p>{p}</p>\r\n                                                })\r\n                                                //teams[match[0]].map(p => {console.log(p)})\r\n                                            }\r\n                                        </div>\r\n                                    </div>           \r\n                            </li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}