{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\SkrallGames\\\\client\\\\src\\\\pages\\\\skrallgaming\\\\createThornament.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; //import { Radar } from \"react-chartjs-2\";\n\nimport usePlayers from \"../../hooks/skrallgaming/usePlayers\";\nimport playersArray from \"../../globals/skrallgaming/players\"; //import placings from \"../../globals/skrallgaming/placings\"\n\nimport \"../../assets/style/skrallgaming/createThornament.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateThornament() {\n  _s();\n\n  const {\n    players,\n    setPlayers\n  } = usePlayers();\n  const [teams, setTeams] = useState([]);\n  const navigate = useNavigate();\n  const tournamentName = useRef();\n  const gameFormat = useRef();\n  const game = useRef('smash');\n  const [groupStage, setGroupStage] = useState(true);\n  const groupMaxTeams = useRef();\n  const groupAdvance = useRef();\n  const eliminitationType = useRef();\n  const teamName = useRef();\n  const p1 = useRef();\n  const p2 = useRef();\n  useState(() => {\n    if (!(players !== null && players !== void 0 && players.lenght)) setPlayers(playersArray);\n  }, []);\n\n  const registerTeam = () => {\n    if (!p1.current.value || !p2.current.value || !teamName.current.value) return;\n    let arr = [...[], ...teams];\n    arr.push({\n      name: teamName.current.value,\n      players: [p1.current.value, p2.current.value]\n    });\n    setTeams(arr);\n    teamName.current.select();\n  };\n\n  const removeTeam = i => {\n    let arr = [...[], ...teams];\n    arr.splice(i, 1);\n    setTeams(arr);\n  };\n\n  const startThornament = () => {\n    var _groupAdvance$current;\n\n    console.clear();\n    if (!teams) return alert(\"Register teams first!\");\n    let matches = [];\n    let uBracketMatches_C = teams.length - 1;\n    let uBracketTeams_C = teams.length;\n    let groups = []; //Create all group matches\n\n    if (groupStage) {\n      groups = Array(Math.ceil(teams.length / groupMaxTeams.current.value));\n      let groupId = 0;\n\n      for (let i = 0; i < teams.length; i++) {\n        var _groups;\n\n        if (!groups[groupId]) groups[groupId] = [];\n        groups[groupId] = [...((_groups = groups) === null || _groups === void 0 ? void 0 : _groups[groupId]), teams[i]];\n        groupId++;\n        if (groupId === groups.length) groupId = 0;\n      }\n\n      console.log(\"Groups:\", groups);\n      groups.map((group, i) => {\n        group.map((team, j) => {\n          for (let k = j + 1; k < group.length; k++) {\n            matches.push({\n              \"group\": String.fromCharCode(65 + i),\n              \"winner\": undefined,\n              \"name\": \"Pool\",\n              \"bo\": 2,\n              \"gameResults\": [undefined, undefined],\n              \"team1\": group[j].name,\n              \"team2\": group[k].name\n            });\n          }\n        });\n      });\n      uBracketTeams_C = groupAdvance.current.value * groups.length;\n      uBracketMatches_C = uBracketTeams_C - 1;\n    } //get array of matches per round\n\n\n    const getRounds = int => {\n      if (typeof int !== \"number\") return;\n      let i = 0;\n      let ret = [];\n\n      while (int > 0) {\n        let rm = Math.pow(2, i);\n        if (int >= rm) ret.unshift(rm);else ret.unshift(int);\n        int -= rm;\n        i++;\n      }\n\n      return ret;\n    }; //get opposite oppenent if id\n\n\n    const getOpponent = (id, type) => {\n      if (id > 1) return id - 1;\n      return type === \"group\" ? groups.length : groupAdvance.current.value;\n    }; //Get an array of positions of round 2 that are already placed\n\n\n    const getRestMatches = (arr, restMatches, rounds) => {\n      let r = [];\n\n      if (arr === null) {\n        arr = [];\n\n        for (let i = 0; i < rounds; i++) {\n          arr.push(i);\n        }\n      }\n\n      let arr2 = arr.splice(arr.length / 2);\n      r.push(arr2[0]);\n      restMatches--;\n      if (restMatches > 0) r = [...r, ...getRestMatches(arr, Math.ceil(restMatches / 2))];\n      restMatches--;\n      if (restMatches > 0) r = [...r, ...getRestMatches(arr2, Math.floor(restMatches / 2))];\n      return r.sort((a, b) => a - b);\n    };\n\n    function* nextTeam_Generator() {\n      let i = -1;\n\n      while (true) {\n        var _teams$i;\n\n        i++;\n        yield teams === null || teams === void 0 ? void 0 : (_teams$i = teams[i]) === null || _teams$i === void 0 ? void 0 : _teams$i.name;\n      }\n    }\n\n    const nextTeam = nextTeam_Generator();\n    let rounds = getRounds(uBracketMatches_C);\n    let restMatches = getRestMatches(null, uBracketTeams_C - rounds[0] * 2, rounds[1]);\n    console.log(`Teams in playoff: ${uBracketTeams_C}`);\n    console.log(`Total playoff matches: ${uBracketMatches_C}`);\n    console.log(\"Playoff Rounds: \", rounds);\n    console.log(\"restMatches: \", restMatches);\n    let upperBracket = [];\n    let groupId = groups.length;\n    let advanceId = groupAdvance === null || groupAdvance === void 0 ? void 0 : (_groupAdvance$current = groupAdvance.current) === null || _groupAdvance$current === void 0 ? void 0 : _groupAdvance$current.value;\n    let matchCount = 0; //Create the upper bracket\n\n    /*\r\n        Lower bracket skall insertas hälften så många nerifrån och upp.\r\n        Dvs första matchen blir loser of 1 & 2 andra 3 & 4.\r\n        Sen på runda 2 däremot (jämna) så vändar man på ordningen.\r\n    */\n\n    rounds.map((r, i) => {\n      let roundIdReference = -1;\n      upperBracket.push([]);\n\n      for (let j = 0; j < r; j++) {\n        matchCount++;\n        roundIdReference += 0.5;\n        if (i === 0 && restMatches.includes(Math.ceil(roundIdReference))) roundIdReference += 0.5;\n        let toLink = Math.abs(Math.ceil(roundIdReference)); // Först rundan är bara att kötta på\n\n        if (i === 0) upperBracket[i].push({\n          \"name\": \"Match \" + matchCount,\n          \"bo\": 3,\n          \"gameResults\": [undefined, undefined, undefined],\n          \"winner\": undefined,\n          \"team1\": groupStage ? {\n            group: groupId,\n            placement: advanceId\n          } : nextTeam.next().value,\n          \"team2\": groupStage ? {\n            group: getOpponent(groupId, \"group\"),\n            placement: getOpponent(advanceId, \"placement\")\n          } : nextTeam.next().value,\n          \"round\": i,\n          \"roundId\": j,\n          \"match\": matchCount,\n          \"toLink\": toLink\n        }); // Runda två så gäller det att det är lag kvar, OCH att den finns i RestMatches-tabellen\n\n        if (i === 1 && uBracketTeams_C > 0 && restMatches.includes(j)) {\n          let t1;\n          let t2;\n\n          if (groupStage) {\n            t1 = {\n              group: groupId,\n              placement: advanceId\n            };\n            t2 = undefined;\n          } else {\n            t1 = nextTeam.next().value;\n            if (!upperBracket[0].some(m => m.toLink === j)) t2 = nextTeam.next().value;\n          }\n\n          upperBracket[i].push({\n            \"name\": \"Match \" + matchCount,\n            \"bo\": 3,\n            \"gameResults\": [undefined, undefined, undefined],\n            \"winner\": undefined,\n            \"team1\": t1,\n            \"team2\": t2,\n            \"round\": i,\n            \"roundId\": j,\n            \"match\": matchCount,\n            \"toLink\": toLink\n          });\n        }\n\n        if (i === 0 || i === 1 && uBracketTeams_C > 0 && restMatches.includes(j)) {\n          groupId -= 1;\n          advanceId -= 1;\n          uBracketTeams_C -= i + Math.abs(2 * (i - 1));\n          if (advanceId === 0) advanceId += groups.length;\n          if (groupId === 0) groupId += groups.length;\n          uBracketMatches_C--;\n          continue;\n        }\n\n        upperBracket[i].push({\n          \"name\": \"Match \" + matchCount,\n          \"bo\": 3,\n          \"gameResults\": [undefined, undefined, undefined],\n          \"winner\": undefined,\n          \"team1\": undefined,\n          \"team2\": undefined,\n          \"round\": i,\n          \"roundId\": j,\n          \"match\": matchCount,\n          \"toLink\": toLink\n        });\n        uBracketMatches_C--;\n      }\n    });\n    console.log(\"upperBracket:\", upperBracket);\n    console.log(\"matches:\", matches);\n    let lowerBracket = []; // Loser's Bracket\n\n    if (eliminitationType === 2) {\n      lowerBracket.push([]);\n      rounds.map((r, i) => {\n        for (let j = 0; j < r / 2; j++) {\n          matchCount++;\n          lowerBracket[i].push({\n            \"name\": \"Match \" + matchCount,\n            \"bo\": 3,\n            \"gameResults\": [undefined, undefined, undefined],\n            \"winner\": undefined,\n            \"team1\": {\n              match: j\n            },\n            \"team2\": {\n              match: j + 1\n            },\n            \"round\": i,\n            \"roundId\": j,\n            \"match\": matchCount,\n            \"fromLink\": undefined\n          });\n        }\n      });\n    }\n\n    navigate(\"/skrallgaming/Thornament\", {\n      state: {\n        groups,\n        upperBracket,\n        teams,\n        groupMatches: matches\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CreateThornamentBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"part\",\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Tournament Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"tournamentName\",\n                required: true,\n                ref: tournamentName,\n                defaultValue: 'SSE-II 2022 Smash Doubles'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Tournament Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"gameFormat\",\n                ref: gameFormat,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1v1\",\n                  children: \"1v1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2v2\",\n                  children: \"2v2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Game Format\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"game\",\n                ref: game,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"smash\",\n                  children: \"Smash Ultimate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"beerPong\",\n                  children: \"Beerpong\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"groupStage\",\n                checked: groupStage,\n                onChange: () => setGroupStage(!groupStage)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"groupStage\",\n                children: \"Groupstage?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 25\n            }, this), groupStage && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"maxTeamsPerGrp\",\n                  defaultValue: 4,\n                  ref: groupMaxTeams\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Max teams per group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"advance\",\n                  defaultValue: 2,\n                  ref: groupAdvance,\n                  min: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Teams advance from each group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                required: true,\n                id: \"eliminitationType\",\n                ref: eliminitationType,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"Single Elimination\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"Double Elimination\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Elimination type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"eloStructure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"eloStructure\",\n                children: \"Structure by Elo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"part\",\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Team Registration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"p1\",\n                defaultValue: \"\",\n                ref: p1,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 33\n                }, this), players && players.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p === null || p === void 0 ? void 0 : p.name,\n                  children: p === null || p === void 0 ? void 0 : p.name\n                }, \"1\" + (p === null || p === void 0 ? void 0 : p.name), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 54\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Player 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"p2\",\n                defaultValue: \"\",\n                ref: p2,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 33\n                }, this), players && players.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p === null || p === void 0 ? void 0 : p.name,\n                  children: p === null || p === void 0 ? void 0 : p.name\n                }, \"2\" + (p === null || p === void 0 ? void 0 : p.name), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 54\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Player 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"teamName\",\n                required: true,\n                ref: teamName,\n                onKeyDown: k => {\n                  if (k.key === \"Enter\") registerTeam();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Team name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => registerTeam(),\n              children: \"Register Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Registered Teams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"registeredTeams\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Team\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Players\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: teams && teams.map((t, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: i + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t.players.join(' & ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      onClick: () => removeTeam(i),\n                      children: \"\\u274C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 41\n                  }, this)]\n                }, t.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this), teams && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finishButton\",\n        onClick: () => startThornament(),\n        children: \"Hold to start Thornament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreateThornament, \"UkqzzPEmuVmByJuyXcp2L0455cw=\", false, function () {\n  return [usePlayers, useNavigate];\n});\n\n_c = CreateThornament;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateThornament\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","usePlayers","playersArray","CreateThornament","players","setPlayers","teams","setTeams","navigate","tournamentName","gameFormat","game","groupStage","setGroupStage","groupMaxTeams","groupAdvance","eliminitationType","teamName","p1","p2","lenght","registerTeam","current","value","arr","push","name","select","removeTeam","i","splice","startThornament","console","clear","alert","matches","uBracketMatches_C","length","uBracketTeams_C","groups","Array","Math","ceil","groupId","log","map","group","team","j","k","String","fromCharCode","undefined","getRounds","int","ret","rm","pow","unshift","getOpponent","id","type","getRestMatches","restMatches","rounds","r","arr2","floor","sort","a","b","nextTeam_Generator","nextTeam","upperBracket","advanceId","matchCount","roundIdReference","includes","toLink","abs","placement","next","t1","t2","some","m","lowerBracket","match","state","groupMatches","p","key","t","join"],"sources":["C:/Git/SkrallGames/client/src/pages/skrallgaming/createThornament.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import { Radar } from \"react-chartjs-2\";\r\nimport usePlayers from \"../../hooks/skrallgaming/usePlayers\";\r\nimport playersArray from \"../../globals/skrallgaming/players\"\r\n//import placings from \"../../globals/skrallgaming/placings\"\r\nimport \"../../assets/style/skrallgaming/createThornament.css\"\r\n\r\nexport default function CreateThornament(){\r\n\r\n    const { players, setPlayers } = usePlayers()\r\n    const [ teams, setTeams ] = useState([])\r\n    const navigate = useNavigate();\r\n\r\n    const tournamentName = useRef()\r\n    const gameFormat = useRef()\r\n    const game = useRef('smash')\r\n\r\n    const [ groupStage, setGroupStage ] = useState(true)\r\n    const groupMaxTeams  = useRef()\r\n    const groupAdvance = useRef()\r\n\r\n    const eliminitationType = useRef()\r\n\r\n    const teamName = useRef()\r\n    const p1 = useRef()\r\n    const p2 = useRef()\r\n\r\n    useState(() => {if (!players?.lenght) setPlayers(playersArray)}, [])\r\n\r\n    const registerTeam = () =>{\r\n        if (!p1.current.value || !p2.current.value || !teamName.current.value) return\r\n        let arr = [...[], ...teams]\r\n        arr.push({\r\n            name: teamName.current.value,\r\n            players: [p1.current.value, p2.current.value]\r\n        })\r\n        setTeams(arr);\r\n        teamName.current.select();\r\n    }\r\n\r\n    const removeTeam = (i) => {\r\n        let arr = [...[], ...teams]\r\n        arr.splice(i, 1)\r\n        setTeams(arr)\r\n    }    \r\n\r\n    const startThornament = () => {\r\n        console.clear()\r\n        if (!teams) return alert(\"Register teams first!\")\r\n        let matches = []\r\n        let uBracketMatches_C = (teams.length - 1)\r\n        let uBracketTeams_C = teams.length;\r\n        let groups = []\r\n\r\n        //Create all group matches\r\n        if (groupStage){\r\n            groups = Array(Math.ceil(teams.length / groupMaxTeams.current.value))\r\n            let groupId = 0\r\n            for (let i = 0; i < teams.length; i++){\r\n                if (!groups[groupId]) groups[groupId] = []\r\n                groups[groupId] = [...groups?.[groupId], teams[i]]\r\n                groupId++\r\n                if (groupId === groups.length) groupId = 0\r\n            }\r\n            console.log(\"Groups:\", groups)\r\n\r\n            groups.map((group, i) => {\r\n                group.map((team, j) => {\r\n                    for(let k = j+1; k < group.length; k++){\r\n                        matches.push({\r\n                            \"group\": String.fromCharCode(65+i),\r\n                            \"winner\": undefined,\r\n                            \"name\": \"Pool\",\r\n                            \"bo\": 2,\r\n                            \"gameResults\": [undefined, undefined],\r\n                            \"team1\": group[j].name,\r\n                            \"team2\": group[k].name,\r\n                        })\r\n                    }\r\n                })                \r\n            })\r\n            uBracketTeams_C = (groupAdvance.current.value * groups.length)\r\n            uBracketMatches_C = uBracketTeams_C - 1\r\n        }\r\n\r\n        //get array of matches per round\r\n        const getRounds = (int) => {            \r\n            if (typeof int !== \"number\") return\r\n            let i = 0\r\n            let ret = [];\r\n            \r\n            while (int > 0){\r\n                let rm = Math.pow(2, i)\r\n                if (int >= rm) ret.unshift(rm)\r\n                else ret.unshift(int)\r\n                int -= rm\r\n                i++                \r\n            }\r\n\r\n            return ret\r\n        }\r\n        \r\n        //get opposite oppenent if id\r\n        const getOpponent = (id, type) => {\r\n            if (id > 1) return id-1            \r\n            return (type === \"group\" ? groups.length: groupAdvance.current.value)\r\n        }        \r\n\r\n        //Get an array of positions of round 2 that are already placed\r\n        const getRestMatches = (arr, restMatches, rounds) => {\r\n            let r = [];\r\n            if (arr === null){                \r\n                arr = [];\r\n                for(let i = 0; i < rounds; i++){\r\n                    arr.push(i);\r\n                }\r\n            }\r\n            let arr2 = arr.splice(arr.length / 2)\r\n            r.push(arr2[0])\r\n            restMatches--\r\n            if(restMatches > 0)\r\n                r = [...r, ...getRestMatches(arr, Math.ceil(restMatches/2))]\r\n            restMatches--\r\n            if(restMatches > 0)\r\n                r = [...r, ...getRestMatches(arr2, Math.floor(restMatches/2))]\r\n            \r\n            return r.sort((a, b) => a - b);\r\n        }\r\n\r\n        function* nextTeam_Generator(){\r\n            let i = -1            \r\n            while(true){\r\n                i++\r\n                yield teams?.[i]?.name\r\n            }            \r\n        }\r\n\r\n        const nextTeam = nextTeam_Generator()\r\n\r\n        let rounds = getRounds(uBracketMatches_C)                \r\n        let restMatches = getRestMatches(null, uBracketTeams_C - rounds[0]*2, rounds[1])\r\n\r\n        console.log(`Teams in playoff: ${uBracketTeams_C}`)\r\n        console.log(`Total playoff matches: ${uBracketMatches_C}`)\r\n        console.log(\"Playoff Rounds: \", rounds)\r\n        console.log(\"restMatches: \", restMatches)        \r\n\r\n        let upperBracket = []\r\n        let groupId = groups.length\r\n        let advanceId = groupAdvance?.current?.value\r\n        let matchCount = 0;\r\n        //Create the upper bracket\r\n        /*\r\n            Lower bracket skall insertas hälften så många nerifrån och upp.\r\n            Dvs första matchen blir loser of 1 & 2 andra 3 & 4.\r\n            Sen på runda 2 däremot (jämna) så vändar man på ordningen.\r\n        */\r\n        rounds.map((r, i) => {\r\n            let roundIdReference = -1\r\n            upperBracket.push([])\r\n            for(let j = 0; j < r; j++){\r\n                matchCount++\r\n                roundIdReference += 0.5\r\n                if (i === 0 && restMatches.includes(Math.ceil(roundIdReference)))\r\n                    roundIdReference += 0.5\r\n\r\n                let toLink = Math.abs(Math.ceil(roundIdReference))\r\n\r\n                // Först rundan är bara att kötta på\r\n                if(i === 0)\r\n                    upperBracket[i].push({\r\n                        \"name\": \"Match \" + matchCount,\r\n                        \"bo\": 3,\r\n                        \"gameResults\": [undefined, undefined, undefined],\r\n                        \"winner\": undefined,\r\n                        \"team1\": (groupStage ? \r\n                            {group: groupId, placement: advanceId}: \r\n                            nextTeam.next().value),\r\n                        \"team2\": (groupStage ? \r\n                            {group: getOpponent(groupId, \"group\"), placement: getOpponent(advanceId, \"placement\")}:\r\n                            nextTeam.next().value),\r\n                        \"round\": i,\r\n                        \"roundId\": j,\r\n                        \"match\": matchCount,\r\n                        \"toLink\": toLink\r\n                    })                       \r\n\r\n                // Runda två så gäller det att det är lag kvar, OCH att den finns i RestMatches-tabellen\r\n                if (i === 1 && uBracketTeams_C > 0 && restMatches.includes(j)){\r\n                    let t1; let t2;\r\n                    if (groupStage){\r\n                        t1 = {group: groupId, placement: advanceId}\r\n                        t2 = undefined\r\n                    }else{\r\n                        t1 = nextTeam.next().value\r\n                        if (!upperBracket[0].some(m => m.toLink === j))\r\n                            t2 = nextTeam.next().value\r\n                    }\r\n                    upperBracket[i].push({\r\n                        \"name\": \"Match \" + matchCount,\r\n                        \"bo\": 3,\r\n                        \"gameResults\": [undefined, undefined, undefined],\r\n                        \"winner\": undefined,\r\n                        \"team1\": t1,\r\n                        \"team2\": t2,\r\n                        \"round\": i,\r\n                        \"roundId\": j,\r\n                        \"match\": matchCount,\r\n                        \"toLink\": toLink\r\n                    })\r\n                }                    \r\n\r\n                if (i === 0 || (i === 1 && uBracketTeams_C > 0 && restMatches.includes(j))){\r\n                    groupId -= 1\r\n                    advanceId -= 1\r\n                    uBracketTeams_C -= i + Math.abs(2*(i-1));\r\n                    if (advanceId === 0) advanceId += groups.length\r\n                    if (groupId === 0) groupId += groups.length\r\n                    uBracketMatches_C--;\r\n                    continue\r\n                }                \r\n                upperBracket[i].push({\r\n                    \"name\": \"Match \" + matchCount,\r\n                    \"bo\": 3,\r\n                    \"gameResults\": [undefined, undefined, undefined],\r\n                    \"winner\": undefined,\r\n                    \"team1\": undefined,\r\n                    \"team2\": undefined,\r\n                    \"round\": i,\r\n                    \"roundId\": j,\r\n                    \"match\": matchCount,\r\n                    \"toLink\": toLink\r\n                })\r\n\r\n                uBracketMatches_C--;                \r\n            }\r\n        })\r\n        console.log(\"upperBracket:\", upperBracket)\r\n        console.log(\"matches:\", matches)\r\n\r\n\r\n        let lowerBracket = [];        \r\n        // Loser's Bracket\r\n        if (eliminitationType === 2){\r\n            lowerBracket.push([])\r\n            rounds.map((r, i) => {\r\n                for (let j = 0; j < r/2; j++){\r\n                    matchCount++\r\n                    lowerBracket[i].push({\r\n                        \"name\": \"Match \" + matchCount,\r\n                        \"bo\": 3,\r\n                        \"gameResults\": [undefined, undefined, undefined],\r\n                        \"winner\": undefined,\r\n                        \"team1\": {match: j},\r\n                        \"team2\": {match: j+1},\r\n                        \"round\": i,\r\n                        \"roundId\": j,\r\n                        \"match\": matchCount,\r\n                        \"fromLink\": undefined\r\n                    }) \r\n                }\r\n            })\r\n        }            \r\n\r\n        navigate(\"/skrallgaming/Thornament\", {state:{\r\n            groups,\r\n            upperBracket,\r\n            teams,\r\n            groupMatches: matches\r\n        }})\r\n    }\r\n\r\n    return <>        \r\n        <div className=\"CreateThornamentBody\">\r\n            <div>                \r\n                <span>\r\n                    <fieldset className=\"part\">\r\n                        <legend>Tournament Info</legend>\r\n                        <div className=\"inputBox\">\r\n                            <input id=\"tournamentName\" required \r\n                                ref={tournamentName} defaultValue={'SSE-II 2022 Smash Doubles'}\r\n                            /> \r\n                            <span>Tournament Name</span>\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <select id=\"gameFormat\" ref={gameFormat}>\r\n                                <option value=\"1v1\">1v1</option>\r\n                                <option value=\"2v2\">2v2</option>\r\n                            </select>\r\n                            <span>Game Format</span>\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <select id=\"game\" ref={game}>\r\n                                <option value=\"smash\">Smash Ultimate</option>\r\n                                <option value=\"beerPong\">Beerpong</option>\r\n                            </select>\r\n                            <span>Game</span>\r\n                        </div>                    \r\n                        <div>\r\n                            <input type=\"checkbox\" id=\"groupStage\" checked={groupStage}\r\n                                onChange={() => setGroupStage(!groupStage)}\r\n                            />\r\n                            <label htmlFor=\"groupStage\">Groupstage?</label>\r\n                        </div>                    \r\n                        {groupStage && <>\r\n                            <div className=\"inputBox\">\r\n                                <input type=\"number\" id=\"maxTeamsPerGrp\" defaultValue={4} ref={groupMaxTeams}/> \r\n                                <span>Max teams per group</span>\r\n                            </div>\r\n                            <div className=\"inputBox\">\r\n                                <input type=\"number\" id=\"advance\" defaultValue={2} \r\n                                    ref={groupAdvance} min={1} \r\n                                /> \r\n                                <span>Teams advance from each group</span>\r\n                            </div>\r\n                        </>} \r\n                        <div className=\"inputBox\">\r\n                            <select required id=\"eliminitationType\" ref={eliminitationType}>\r\n                                <option value={1}>Single Elimination</option>\r\n                                <option value={2}>Double Elimination</option>\r\n                            </select>\r\n                            <span>Elimination type</span>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"checkbox\" id=\"eloStructure\"/>\r\n                            <label htmlFor=\"eloStructure\">Structure by Elo</label>\r\n                        </div>                    \r\n                    </fieldset>\r\n                </span>\r\n                <span>\r\n                    <fieldset className=\"part\">\r\n                        <legend>Team Registration</legend>                                            \r\n                        <div className=\"inputBox\">\r\n                            <select id=\"p1\" defaultValue={\"\"} ref={p1}>\r\n                                <option value=\"\" disabled/>\r\n                                {players &&\r\n                                    players.map(p => <option key={\"1\"+p?.name} value={p?.name}>{p?.name}</option>)\r\n                                }\r\n                            </select>\r\n                            <span>Player 1</span>\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <select id=\"p2\" defaultValue={\"\"} ref={p2}>\r\n                                <option value=\"\" disabled/>\r\n                                {players &&\r\n                                    players.map(p => <option key={\"2\"+p?.name} value={p?.name}>{p?.name}</option>)\r\n                                }\r\n                            </select>\r\n                            <span>Player 2</span>\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <input id=\"teamName\" required \r\n                                ref={teamName}\r\n                                onKeyDown={(k) => {if(k.key === \"Enter\") registerTeam()}} \r\n                            /> \r\n                            <span>Team name</span>\r\n                        </div>\r\n                        <button onClick={() => registerTeam()}>Register Team</button>\r\n                    </fieldset>\r\n                </span>\r\n                <span>\r\n                    <fieldset>\r\n                        <legend>Registered Teams</legend>\r\n                        <table className=\"registeredTeams\">\r\n                            <thead><tr>\r\n                                <th></th>\r\n                                <th>Team</th>\r\n                                <th>Players</th>\r\n                            </tr></thead>\r\n                            <tbody>\r\n                                {teams &&\r\n                                    teams.map((t, i) => <tr key={t.name}>\r\n                                        <td>{i+1}</td>\r\n                                        <td>{t.name}</td>\r\n                                        <td>{t.players.join(' & ')}</td>\r\n                                        <td><i onClick={() => removeTeam(i)}>❌</i></td>\r\n                                    </tr>)\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </fieldset>\r\n                </span>\r\n            </div>            \r\n            {\r\n                teams &&\r\n                <div className=\"finishButton\" onClick={() => startThornament()}>Hold to start Thornament</div>\r\n            }\r\n        </div>    \r\n    </>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}