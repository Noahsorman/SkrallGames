{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\SkrallGames\\\\client\\\\src\\\\pages\\\\skrallgaming\\\\createThornament.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\"; //import { Radar } from \"react-chartjs-2\";\n\nimport usePlayers from \"../../hooks/skrallgaming/usePlayers\";\nimport playersArray from \"../../globals/skrallgaming/players\";\nimport placings from \"../../globals/skrallgaming/placings\";\nimport \"../../assets/style/skrallgaming/createThornament.css\";\nimport { getRoles } from \"@testing-library/react\";\nimport { useHref } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateThornament() {\n  _s();\n\n  const {\n    players,\n    setPlayers\n  } = usePlayers();\n  const [teams, setTeams] = useState([]);\n  const tournamentName = useRef('SSE-II 2022 Smash Doubles');\n  const gameFormat = useRef('2v2');\n  const game = useRef('smash');\n  const groupStage = useRef(true);\n  const groupMaxTeams = useRef(4);\n  const groupAdvance = useRef(2);\n  const eliminitationType = useRef(2);\n  const teamName = useRef();\n  const p1 = useRef();\n  const p2 = useRef();\n  useState(() => {\n    if (!(players !== null && players !== void 0 && players.lenght)) setPlayers(playersArray);\n  }, []);\n\n  const registerTeam = () => {\n    if (!p1.current.value || !p2.current.value || !teamName.current.value) return;\n    let arr = [...[], ...teams];\n    arr.push({\n      name: teamName.current.value,\n      players: [p1.current.value, p2.current.value]\n    });\n    setTeams(arr);\n  };\n\n  const removeTeam = i => {\n    let arr = [...[], ...teams];\n    arr.splice(i, 1);\n    setTeams(arr);\n  };\n\n  const startThornament = () => {\n    if (!teams) return alert(\"Register teams first!\");\n    let matches = [];\n    let uBracketMatches_C = teams.length - 1;\n    let uBracketTeams_C = teams.length;\n    let groups = [];\n\n    if (groupStage.current.value) {\n      groups = Array(Math.ceil(teams.length / groupMaxTeams.current.value));\n      let groupId = 0;\n\n      for (let i = 0; i < teams.length; i++) {\n        var _groups;\n\n        if (!groups[groupId]) groups[groupId] = [];\n        groups[groupId] = [...((_groups = groups) === null || _groups === void 0 ? void 0 : _groups[groupId]), teams[i]];\n        groupId++;\n        if (groupId === groups.length) groupId = 0;\n      }\n\n      console.log(\"Groups:\", groups);\n      groups.map((group, i) => {\n        group.map((team, j) => {\n          for (let k = j + 1; k < group.length; k++) {\n            matches.push({\n              \"type\": \"groupmatch\",\n              \"group\": String.fromCharCode(65 + i),\n              \"team1\": group[j].name,\n              \"team2\": group[k].name\n            });\n          }\n        });\n      });\n      uBracketTeams_C = groupAdvance.current.value * groups.length;\n      uBracketMatches_C = uBracketTeams_C - 1;\n    }\n\n    if (eliminitationType.current.value === 1) uBracketMatches_C += 1; //Bronze Match for single elimination\n\n    const getRounds = int => {\n      if (typeof int !== \"number\") return;\n      let i = 0;\n      let ret = [];\n\n      while (int > 0) {\n        let rm = Math.pow(2, i);\n        if (int >= rm) ret.unshift(rm);else ret.unshift(int);\n        int -= rm;\n        i++;\n      }\n\n      return ret;\n    };\n\n    const getOpponent = (id, type) => {\n      if (id > 1) return id - 1;\n      return type === \"group\" ? groups.length : groupAdvance.current.value;\n    };\n\n    let rounds = getRounds(uBracketMatches_C);\n    let groupId = groups.length;\n    let advanceId = groupAdvance.current.value;\n\n    const getRestMatches = arr => {\n      // Hitta matchen som ska substitueras med Referense\n      // \n      if (arr === undefined) arr = Array(rounds[1]);\n      let arr2 = arr.splice(arr.length / 2);\n      let rest_c = uBracketTeams_C / 2 - rounds[0];\n    };\n\n    console.log(`Teams left: ${uBracketTeams_C}`);\n    console.log(`Upper Bracket Matches left: ${uBracketMatches_C}`);\n    console.log(\"Rounds: \", rounds);\n    let upperBracket = [];\n    rounds.map((r, i) => {\n      if (i > 0) return;\n\n      for (let j = 0; j < r; j++) {\n        if (i === 0) {\n          upperBracket.push({\n            \"team1\": {\n              group: groupId,\n              placement: advanceId\n            },\n            \"team2\": {\n              group: getOpponent(groupId, \"group\"),\n              placement: getOpponent(advanceId, \"placement\")\n            },\n            \"round\": i,\n            \"match\": upperBracket.length + 1\n          });\n        }\n\n        groupId -= 1;\n        advanceId -= 1;\n        uBracketMatches_C--;\n        uBracketTeams_C -= 2;\n        if (advanceId === 0) advanceId += groups.lenght;\n        if (groupId === 0) groupId += groups.lenght;\n      }\n    });\n    console.log(`UBracket Matches Left: ${uBracketMatches_C}`);\n    console.log(`UBracket Teams Left: ${uBracketTeams_C}`);\n    console.log(\"upperBracket:\", upperBracket);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CreateThornamentBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"part\",\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Tournament Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"tournamentName\",\n                required: true,\n                ref: tournamentName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Tournament Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"gameFormat\",\n                ref: gameFormat,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1v1\",\n                  children: \"1v1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2v2\",\n                  children: \"2v2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Game Format\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"game\",\n                ref: game,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"smash\",\n                  children: \"Smash Ultimate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"beerPong\",\n                  children: \"Beerpong\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"groupStage\",\n                ref: groupStage.current.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"groupStage\",\n                children: \"Groupstage?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 25\n            }, this), groupStage.current.value && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"maxTeamsPerGrp\",\n                  required: true,\n                  value: groupMaxTeams.current.value,\n                  onChange: v => setGroupMaxTeams(v.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Max teams per group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inputBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"advance\",\n                  required: true,\n                  ref: groupAdvance,\n                  max: groupMaxTeams.current.value,\n                  min: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Teams advance from each group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                required: true,\n                id: \"eliminitationType\",\n                ref: eliminitationType,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"Single Elimination\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"Double Elimination\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Elimination type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"eloStructure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"eloStructure\",\n                children: \"Structure by Elo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"part\",\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Team Registration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"p1\",\n                defaultValue: \"\",\n                ref: p1,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 33\n                }, this), players && players.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p === null || p === void 0 ? void 0 : p.name,\n                  children: p === null || p === void 0 ? void 0 : p.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 54\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Player 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"p2\",\n                defaultValue: \"\",\n                ref: p2,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 33\n                }, this), players && players.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p === null || p === void 0 ? void 0 : p.name,\n                  children: p === null || p === void 0 ? void 0 : p.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 54\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Player 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"teamName\",\n                required: true,\n                ref: teamName,\n                onKeyDown: k => {\n                  if (k.key === \"Enter\") registerTeam();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Team name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => registerTeam(),\n              children: \"Register Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Registered Teams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"registeredTeams\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Team\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Players\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: teams && teams.map((t, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: i + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t.players.join(' & ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      onClick: () => removeTeam(i),\n                      children: \"\\u274C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 57\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), teams && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finishButton\",\n        onClick: () => startThornament(),\n        children: \"Hold to start Thornament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreateThornament, \"m45dAVpVHGhYFVFoSuHkGtP7MII=\", false, function () {\n  return [usePlayers];\n});\n\n_c = CreateThornament;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateThornament\");","map":{"version":3,"names":["React","useEffect","useState","useRef","usePlayers","playersArray","placings","getRoles","useHref","CreateThornament","players","setPlayers","teams","setTeams","tournamentName","gameFormat","game","groupStage","groupMaxTeams","groupAdvance","eliminitationType","teamName","p1","p2","lenght","registerTeam","current","value","arr","push","name","removeTeam","i","splice","startThornament","alert","matches","uBracketMatches_C","length","uBracketTeams_C","groups","Array","Math","ceil","groupId","console","log","map","group","team","j","k","String","fromCharCode","getRounds","int","ret","rm","pow","unshift","getOpponent","id","type","rounds","advanceId","getRestMatches","undefined","arr2","rest_c","upperBracket","r","placement","v","setGroupMaxTeams","target","p","key","t","join"],"sources":["C:/Git/SkrallGames/client/src/pages/skrallgaming/createThornament.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n//import { Radar } from \"react-chartjs-2\";\r\nimport usePlayers from \"../../hooks/skrallgaming/usePlayers\";\r\nimport playersArray from \"../../globals/skrallgaming/players\"\r\nimport placings from \"../../globals/skrallgaming/placings\"\r\nimport \"../../assets/style/skrallgaming/createThornament.css\"\r\nimport { getRoles } from \"@testing-library/react\";\r\nimport { useHref } from \"react-router-dom\";\r\n\r\nexport default function CreateThornament(){\r\n\r\n    const { players, setPlayers } = usePlayers()\r\n    const [ teams, setTeams ] = useState([])\r\n\r\n    const tournamentName = useRef('SSE-II 2022 Smash Doubles')\r\n    const gameFormat = useRef('2v2')\r\n    const game = useRef('smash')\r\n\r\n    const groupStage = useRef(true)\r\n    const groupMaxTeams  = useRef(4)\r\n    const groupAdvance = useRef(2)\r\n\r\n    const eliminitationType = useRef(2)\r\n\r\n    const teamName = useRef()\r\n    const p1 = useRef()\r\n    const p2 = useRef()\r\n\r\n    useState(() => {if (!players?.lenght) setPlayers(playersArray)}, [])\r\n\r\n    const registerTeam = () =>{\r\n        if (!p1.current.value || !p2.current.value || !teamName.current.value) return\r\n        let arr = [...[], ...teams]\r\n        arr.push({\r\n            name: teamName.current.value,\r\n            players: [p1.current.value, p2.current.value]\r\n        })\r\n        setTeams(arr);\r\n    }\r\n\r\n    const removeTeam = (i) => {\r\n        let arr = [...[], ...teams]\r\n        arr.splice(i, 1)\r\n        setTeams(arr)\r\n    }    \r\n\r\n    const startThornament = () => {\r\n        if (!teams) return alert(\"Register teams first!\")\r\n        let matches = []\r\n        let uBracketMatches_C = (teams.length - 1)\r\n        let uBracketTeams_C = teams.length;\r\n        let groups = []\r\n\r\n        if (groupStage.current.value){\r\n            groups = Array(Math.ceil(teams.length / groupMaxTeams.current.value))\r\n            let groupId = 0\r\n            for (let i = 0; i < teams.length; i++){\r\n                if (!groups[groupId]) groups[groupId] = []\r\n                groups[groupId] = [...groups?.[groupId], teams[i]]\r\n                groupId++\r\n                if (groupId === groups.length) groupId = 0\r\n            }\r\n            console.log(\"Groups:\", groups)\r\n\r\n            groups.map((group, i) => {\r\n                group.map((team, j) => {\r\n                    for(let k = j+1; k < group.length; k++){\r\n                        matches.push({\r\n                            \"type\":\"groupmatch\",\r\n                            \"group\": String.fromCharCode(65+i),\r\n                            \"team1\": group[j].name,\r\n                            \"team2\": group[k].name,\r\n                        })\r\n                    }\r\n                })                \r\n            })\r\n            uBracketTeams_C = (groupAdvance.current.value * groups.length)\r\n            uBracketMatches_C = uBracketTeams_C - 1\r\n        }\r\n        if (eliminitationType.current.value === 1) uBracketMatches_C += 1 //Bronze Match for single elimination\r\n\r\n        const getRounds = (int) => {            \r\n            if (typeof int !== \"number\") return\r\n            let i = 0\r\n            let ret = [];\r\n            \r\n            while (int > 0){\r\n                let rm = Math.pow(2, i)\r\n                if (int >= rm) ret.unshift(rm)\r\n                else ret.unshift(int)\r\n                int -= rm\r\n                i++                \r\n            }\r\n\r\n            return ret\r\n        }\r\n        \r\n        const getOpponent = (id, type) => {\r\n            if (id > 1) return id-1            \r\n            return (type === \"group\" ? groups.length: groupAdvance.current.value)\r\n        }\r\n\r\n        let rounds = getRounds(uBracketMatches_C)\r\n        let groupId = groups.length\r\n        let advanceId = groupAdvance.current.value\r\n\r\n        const getRestMatches = (arr) => {\r\n            // Hitta matchen som ska substitueras med Referense\r\n            // \r\n            if (arr === undefined) arr = Array(rounds[1])\r\n            let arr2 = arr.splice(arr.length/2)\r\n            let rest_c = uBracketTeams_C / 2 - rounds[0]\r\n\r\n        }                \r\n     \r\n        console.log(`Teams left: ${uBracketTeams_C}`)\r\n        console.log(`Upper Bracket Matches left: ${uBracketMatches_C}`)\r\n        console.log(\"Rounds: \", rounds)\r\n\r\n        let upperBracket = []\r\n        rounds.map((r, i) => {\r\n            if (i>0)return\r\n            for(let j = 0; j < r; j++){\r\n                if(i === 0){                    \r\n                    upperBracket.push({\r\n                        \"team1\": {group: groupId, placement: advanceId},\r\n                        \"team2\": {group: getOpponent(groupId, \"group\"), placement: getOpponent(advanceId, \"placement\")},\r\n                        \"round\": i,\r\n                        \"match\": upperBracket.length+1\r\n                    })\r\n                }\r\n                groupId -= 1\r\n                advanceId -= 1\r\n                uBracketMatches_C--;\r\n                uBracketTeams_C -= 2;\r\n                if (advanceId === 0) advanceId += groups.lenght\r\n                if (groupId === 0) groupId += groups.lenght\r\n            }\r\n        })\r\n        console.log(`UBracket Matches Left: ${uBracketMatches_C}`)\r\n        console.log(`UBracket Teams Left: ${uBracketTeams_C}`)\r\n        console.log(\"upperBracket:\", upperBracket)\r\n    }\r\n\r\n    return <>        \r\n        <div className=\"CreateThornamentBody\">\r\n            <div>                \r\n                <span>\r\n                    <fieldset className=\"part\">\r\n                        <legend>Tournament Info</legend>\r\n                        <div className=\"inputBox\">\r\n                            <input id=\"tournamentName\" required \r\n                                ref={tournamentName} \r\n                            /> \r\n                            <span>Tournament Name</span>\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <select id=\"gameFormat\" ref={gameFormat}>\r\n                                <option value=\"1v1\">1v1</option>\r\n                                <option value=\"2v2\">2v2</option>\r\n                            </select>\r\n                            <span>Game Format</span>\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <select id=\"game\" ref={game}>\r\n                                <option value=\"smash\">Smash Ultimate</option>\r\n                                <option value=\"beerPong\">Beerpong</option>\r\n                            </select>\r\n                            <span>Game</span>\r\n                        </div>                    \r\n                        <div>\r\n                            <input type=\"checkbox\" id=\"groupStage\" ref={groupStage.current.value}/>\r\n                            <label htmlFor=\"groupStage\">Groupstage?</label>\r\n                        </div>                    \r\n                        {groupStage.current.value &&<>\r\n                            <div className=\"inputBox\">\r\n                                <input type=\"number\" id=\"maxTeamsPerGrp\" required value={groupMaxTeams.current.value} onChange={(v) => setGroupMaxTeams(v.target.value)} /> \r\n                                <span>Max teams per group</span>\r\n                            </div>\r\n                            <div className=\"inputBox\">\r\n                                <input type=\"number\" id=\"advance\" required \r\n                                    ref={groupAdvance} max={groupMaxTeams.current.value} min={1} \r\n                                /> \r\n                                <span>Teams advance from each group</span>\r\n                            </div>\r\n                        </>} \r\n                        <div className=\"inputBox\">\r\n                            <select required id=\"eliminitationType\" ref={eliminitationType}>\r\n                                <option value={1}>Single Elimination</option>\r\n                                <option value={2}>Double Elimination</option>\r\n                            </select>\r\n                            <span>Elimination type</span>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"checkbox\" id=\"eloStructure\"/>\r\n                            <label htmlFor=\"eloStructure\">Structure by Elo</label>\r\n                        </div>                    \r\n                    </fieldset>\r\n                </span>\r\n                <span>\r\n                    <fieldset className=\"part\">\r\n                        <legend>Team Registration</legend>                                            \r\n                        <div className=\"inputBox\">\r\n                            <select id=\"p1\" defaultValue={\"\"} ref={p1}>\r\n                                <option value=\"\" disabled/>\r\n                                {players &&\r\n                                    players.map(p => <option value={p?.name}>{p?.name}</option>)\r\n                                }\r\n                            </select>\r\n                            <span>Player 1</span>\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <select id=\"p2\" defaultValue={\"\"} ref={p2}>\r\n                                <option value=\"\" disabled/>\r\n                                {players &&\r\n                                    players.map(p => <option value={p?.name}>{p?.name}</option>)\r\n                                }\r\n                            </select>\r\n                            <span>Player 2</span>\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <input id=\"teamName\" required \r\n                                ref={teamName}\r\n                                onKeyDown={(k) => {if(k.key === \"Enter\") registerTeam()}} \r\n                            /> \r\n                            <span>Team name</span>\r\n                        </div>\r\n                        <button onClick={() => registerTeam()}>Register Team</button>\r\n                    </fieldset>\r\n                </span>\r\n                <span>\r\n                    <fieldset>\r\n                        <legend>Registered Teams</legend>\r\n                        <table className=\"registeredTeams\">\r\n                            <thead><tr>\r\n                                <th></th>\r\n                                <th>Team</th>\r\n                                <th>Players</th>\r\n                            </tr></thead>\r\n                            <tbody>\r\n                                {teams &&\r\n                                    teams.map((t, i) => <tr>\r\n                                        <td>{i+1}</td>\r\n                                        <td>{t.name}</td>\r\n                                        <td>{t.players.join(' & ')}</td>\r\n                                        <td><i onClick={() => removeTeam(i)}>❌</i></td>\r\n                                    </tr>)\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </fieldset>\r\n                </span>\r\n            </div>            \r\n            {\r\n                teams &&\r\n                <div className=\"finishButton\" onClick={() => startThornament()}>Hold to start Thornament</div>\r\n            }\r\n        </div>    \r\n    </>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}