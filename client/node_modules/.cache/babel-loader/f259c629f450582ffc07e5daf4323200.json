{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\SkrallGames\\\\client\\\\src\\\\pages\\\\skrallgaming\\\\Thornament.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"../../assets/style/skrallgaming/thornament.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Thornament() {\n  _s();\n\n  var _loc$state5, _loc$state6, _loc$state7;\n\n  const loc = useLocation();\n  const [teams, setTeams] = useState([]);\n  let [matches, setMatches] = useState([]);\n  let [groups, setGroups] = useState([]);\n\n  const teamColor = teamName => {\n    // let hash = 0;\n    // for (let i = 0; i < teamName.length; i++) {\n    //     hash = teamName.charCodeAt(i) + ((hash << 5) - hash);\n    //     hash = hash & hash;\n    // }\n    // return hash % 360\n    let c = teams === null || teams === void 0 ? void 0 : teams.findIndex(t => t.name === teamName);\n    return Math.round(c / (teams === null || teams === void 0 ? void 0 : teams.length) * 360);\n  };\n  /**\r\n   * \r\n   * @param {number} matchIndex \r\n   * @param {number} gameIndex \r\n   * @param {empty | team1 | team2} winner \r\n   */\n\n\n  const updateGameResult = (matchIndex, gameIndex, winner) => {\n    var _matches$matchIndex;\n\n    // winner = empty, team1, team2\n    let arr = [...matches];\n    const bo = matches[matchIndex].bo;\n    let won = 0;\n    let lost = 0;\n    if (gameIndex === null) gameIndex = arr[matchIndex].gameResults.findIndex(m => m === undefined) || 0;\n\n    if (winner === \"empty\") {\n      for (let i = gameIndex; i < bo; i++) {\n        arr[matchIndex].gameResults[i] = undefined;\n      }\n    }\n\n    for (let i = 0; i < bo; i++) {\n      if (won > bo / 2 || lost > bo / 2) {\n        arr[matchIndex].gameResults[i] = false;\n        continue;\n      }\n\n      if (i === gameIndex) arr[matchIndex].gameResults[gameIndex] = winner === \"team1\" ? 1 : winner === \"team2\" ? 2 : undefined;\n      if (arr[matchIndex].gameResults[i] === 1) won += 1;\n      if (arr[matchIndex].gameResults[i] === 2) lost += 1;\n    }\n\n    arr[matchIndex].winner = won > bo / 2 ? 1 : lost > bo / 2 ? 2 : won === lost && bo % 2 === 0 && arr[matchIndex].gameResults.every(r => r !== undefined) ? true : undefined;\n    setMatches(arr);\n    let thisGroup = (_matches$matchIndex = matches[matchIndex]) === null || _matches$matchIndex === void 0 ? void 0 : _matches$matchIndex.group;\n\n    if (thisGroup !== undefined) {\n      // Is a group/pool match.\n      if (matches.every(m => (m === null || m === void 0 ? void 0 : m.group) !== thisGroup || m.winner !== undefined)) {\n        //Every match in this group is done!\n        let tempGroups = [...groups];\n        tempGroups[thisGroup].forEach((team, i) => {\n          //Update Team wins\n          tempGroups[i].wins = arr.reduce((pre, cur) => {\n            if (cur.team1 === team.name) return pre + cur.gameResults.reduce((pre, cur) => pre + (cur === 1 ? 1 : 0), 0);\n            if (cur.team2 === team.name) return pre + cur.gameResults.reduce((pre, cur) => pre + (cur === 2 ? 1 : 0), 0);else return pre;\n          }, 0);\n        });\n        console.log(tempGroups);\n        tempGroups[thisGroup].sort((a, b) => {\n          return b - a;\n        });\n        console.log(\"t2:\", tempGroups);\n        setTeams(tempGroups);\n      }\n    }\n  };\n\n  useEffect(() => {\n    var _loc$state, _loc$state2, _loc$state3, _loc$state4;\n\n    let arr = [...[], ...(loc === null || loc === void 0 ? void 0 : (_loc$state = loc.state) === null || _loc$state === void 0 ? void 0 : _loc$state.groupMatches)];\n    loc === null || loc === void 0 ? void 0 : (_loc$state2 = loc.state) === null || _loc$state2 === void 0 ? void 0 : _loc$state2.upperBracket.forEach(r => {\n      arr = [...arr, ...r];\n    });\n    console.log(\"ins loc useEffect\", loc === null || loc === void 0 ? void 0 : loc.state, \"arr:\", arr);\n    setTeams(loc === null || loc === void 0 ? void 0 : (_loc$state3 = loc.state) === null || _loc$state3 === void 0 ? void 0 : _loc$state3.teams);\n    setGroups(loc === null || loc === void 0 ? void 0 : (_loc$state4 = loc.state) === null || _loc$state4 === void 0 ? void 0 : _loc$state4.groups);\n    setMatches(arr);\n  }, [loc]);\n  useEffect(() => {\n    const currentMatch = document.getElementById(`row${matches.findIndex(m => m.winner === undefined)}`);\n    if (!currentMatch) return;\n    currentMatch.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"start\"\n    });\n  }, [matches]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thornamentBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ulkeeper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (matches === null || matches === void 0 ? void 0 : matches.length) > 0 && matches.map((match, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `row${index}`,\n              className: `${match.winner !== undefined ? 'finished' : ''} ` + `${index === matches.findIndex(m => m.winner === undefined) ? match.gameResults.some(gr => gr !== undefined) ? 'current' : 'tobe' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"matchcount\",\n                children: match.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), typeof match.team1 === \"string\" && !match.team1.includes(\"âˆ€\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teambody\",\n                onClick: () => {\n                  updateGameResult(index, null, \"team1\");\n                },\n                style: {\n                  background: `hsl(${teamColor(match.team1)}, 100%, 24%)`,\n                  boxShadow: `inset 12px 12px 12px hsl(${teamColor(match.team1)}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match.team1)}, 100%, 29%)`,\n                  opacity: `${match.winner === 2 ? 35 : 100}%`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamplayers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamname \",\n                  children: match.team1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teambody\",\n                style: {\n                  background: `hsl(0, 0%, 24%)`,\n                  boxShadow: `inset 12px 12px 12px hsl(0, 0%, 15%), inset -12px -12px 12px hsl(0, 0%, 29%)`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamplayers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamname \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scorebody\",\n                children: (match === null || match === void 0 ? void 0 : match.bo) && [...Array(match.bo)].map((_, i) => {\n                  var _match$gameResults;\n\n                  let gr = (_match$gameResults = match.gameResults) === null || _match$gameResults === void 0 ? void 0 : _match$gameResults[i];\n                  if (gr === undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 70\n                  }, this);\n                  if (gr === false) return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score\",\n                    style: {\n                      opacity: \"0%\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 66\n                  }, this);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score\",\n                    style: {\n                      background: `hsl(${teamColor(match[`team${gr}`])}, 100%, 24%)`,\n                      boxShadow: `inset 8px 8px 8px hsl(${teamColor(match[`team${gr}`])}, 100%, 15%), inset -8px -8px 8px hsl(${teamColor(match[`team${gr}`])}, 100%, 29%)`\n                    },\n                    onClick: () => {\n                      updateGameResult(index, i, \"empty\");\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 48\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), typeof match.team2 === \"string\" && !match.team2.includes(\"âˆ€\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teambody\",\n                onClick: () => {\n                  updateGameResult(index, null, \"team2\");\n                },\n                style: {\n                  background: `hsl(${teamColor(match.team2)}, 100%, 24%)`,\n                  boxShadow: `inset 12px 12px 12px hsl(${teamColor(match.team2)}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match.team2)}, 100%, 29%)`,\n                  opacity: `${match.winner === 1 ? 35 : 100}%`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamname\",\n                  children: match.team2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamplayers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teambody\",\n                style: {\n                  background: `hsl(0, 0%, 24%)`,\n                  boxShadow: `inset 12px 12px 12px hsl(0, 0%, 15%), inset -12px -12px 12px hsl(0, 0%, 29%)`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamplayers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teamname \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageSwitcher\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/skrallgaming/ThornamentBracket\",\n          state: {\n            groups: loc === null || loc === void 0 ? void 0 : (_loc$state5 = loc.state) === null || _loc$state5 === void 0 ? void 0 : _loc$state5.groups,\n            upperBracket: loc === null || loc === void 0 ? void 0 : (_loc$state6 = loc.state) === null || _loc$state6 === void 0 ? void 0 : _loc$state6.upperBracket,\n            groupMatches: loc === null || loc === void 0 ? void 0 : (_loc$state7 = loc.state) === null || _loc$state7 === void 0 ? void 0 : _loc$state7.groupMatches,\n            teams\n          },\n          children: \"\\uD83D\\uDCB1Bracket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Thornament, \"sy4pUnsh/tgfG9WKpxofbFB5y2Y=\", false, function () {\n  return [useLocation];\n});\n\n_c = Thornament;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thornament\");","map":{"version":3,"names":["React","useEffect","useState","Link","useLocation","Thornament","loc","teams","setTeams","matches","setMatches","groups","setGroups","teamColor","teamName","c","findIndex","t","name","Math","round","length","updateGameResult","matchIndex","gameIndex","winner","arr","bo","won","lost","gameResults","m","undefined","i","every","r","thisGroup","group","tempGroups","forEach","team","wins","reduce","pre","cur","team1","team2","console","log","sort","a","b","state","groupMatches","upperBracket","currentMatch","document","getElementById","scrollIntoView","behavior","block","inline","map","match","index","some","gr","includes","background","boxShadow","opacity","Array","_"],"sources":["C:/Git/SkrallGames/client/src/pages/skrallgaming/Thornament.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"../../assets/style/skrallgaming/thornament.css\"\r\n\r\nexport default function Thornament(){\r\n    const loc = useLocation();\r\n    const [ teams, setTeams] = useState([]);\r\n    let [ matches, setMatches ] = useState([]);\r\n    let [ groups, setGroups ] = useState([]);\r\n    const teamColor = (teamName) => {\r\n        // let hash = 0;\r\n        // for (let i = 0; i < teamName.length; i++) {\r\n        //     hash = teamName.charCodeAt(i) + ((hash << 5) - hash);\r\n        //     hash = hash & hash;\r\n        // }\r\n        // return hash % 360\r\n        \r\n        let c = teams?.findIndex(t => t.name === teamName)\r\n        return Math.round(c / teams?.length * 360)\r\n    }\r\n    /**\r\n     * \r\n     * @param {number} matchIndex \r\n     * @param {number} gameIndex \r\n     * @param {empty | team1 | team2} winner \r\n     */\r\n    const updateGameResult = (matchIndex, gameIndex, winner) => {\r\n        // winner = empty, team1, team2\r\n        let arr = [...matches]\r\n        const bo = matches[matchIndex].bo\r\n        let won = 0; \r\n        let lost = 0;\r\n\r\n        if (gameIndex === null)\r\n            gameIndex = arr[matchIndex].gameResults.findIndex(m => m === undefined) || 0\r\n\r\n        if (winner === \"empty\"){\r\n            for (let i = gameIndex; i < bo ; i++){\r\n                arr[matchIndex].gameResults[i] = undefined    \r\n            }\r\n        }\r\n        \r\n        for (let i = 0; i < bo; i++){\r\n            if (won > bo/2 || lost > bo/2){                \r\n                arr[matchIndex].gameResults[i] = false\r\n                continue\r\n            }\r\n            if (i === gameIndex) arr[matchIndex].gameResults[gameIndex] = (winner === \"team1\" ? 1 : (winner === \"team2\" ? 2 : undefined))\r\n            if (arr[matchIndex].gameResults[i] === 1) won += 1;\r\n            if (arr[matchIndex].gameResults[i] === 2) lost += 1;\r\n        }        \r\n        arr[matchIndex].winner = won > bo/2 ? 1 : \r\n                                lost > bo/2 ? 2 : \r\n                                won === lost && bo % 2 === 0 && arr[matchIndex].gameResults.every(r => r !== undefined) ? true:\r\n                                undefined;\r\n        setMatches(arr)\r\n\r\n\r\n        let thisGroup = matches[matchIndex]?.group\r\n        if (thisGroup !== undefined){ // Is a group/pool match.\r\n            if (matches.every(m => m?.group !== thisGroup || m.winner !== undefined)){ //Every match in this group is done!\r\n                let tempGroups = [...groups]\r\n                tempGroups[thisGroup].forEach((team, i) => { //Update Team wins\r\n                    tempGroups[i].wins = arr.reduce((pre, cur) => {\r\n                        if (cur.team1 === team.name) return pre + cur.gameResults.reduce((pre, cur) => pre + (cur === 1 ? 1 : 0), 0)\r\n                        if (cur.team2 === team.name) return pre + cur.gameResults.reduce((pre, cur) => pre + (cur === 2 ? 1 : 0), 0)\r\n                        else return pre\r\n                    }, 0)\r\n                })\r\n                console.log(tempGroups)\r\n                tempGroups[thisGroup].sort((a, b) => {\r\n                    return b - a\r\n                })\r\n\r\n                console.log(\"t2:\", tempGroups)\r\n\r\n                \r\n\r\n                setTeams(tempGroups)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let arr = [...[], ...loc?.state?.groupMatches]\r\n        loc?.state?.upperBracket.forEach(r => {\r\n            arr = [...arr, ...r]\r\n        })\r\n        console.log(\"ins loc useEffect\", loc?.state, \"arr:\", arr)\r\n        setTeams(loc?.state?.teams)\r\n        setGroups(loc?.state?.groups)\r\n        setMatches(arr);\r\n    }, [loc])\r\n\r\n    useEffect(() => {              \r\n        const currentMatch = document.getElementById(`row${matches.findIndex(m => m.winner === undefined)}`);  \r\n        if (!currentMatch) return\r\n        currentMatch.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"center\",\r\n            inline: \"start\",\r\n        });\r\n    }, [matches])\r\n\r\n    return <>        \r\n        <div className=\"thornamentBody\">\r\n            <div className=\"ulkeeper\">\r\n                <div>\r\n                    {matches?.length > 0  &&\r\n                        matches.map((match, index) => {\r\n                            return <div id={`row${index}`} className={`${match.winner !== undefined ? 'finished' : ''} ` + \r\n                                `${(index === matches.findIndex(m => m.winner === undefined)) ? \r\n                                    (match.gameResults.some(gr => gr !== undefined) ? 'current' : 'tobe') \r\n                                    : ''}`\r\n                            }>\r\n                                <span className=\"matchcount\">{match.name}</span>\r\n                                {typeof match.team1 === \"string\" && !match.team1.includes(\"âˆ€\") ?\r\n                                    <div className=\"teambody\" onClick={() => {updateGameResult(index, null, \"team1\")}} \r\n                                    style={{\r\n                                        background: `hsl(${teamColor(match.team1)}, 100%, 24%)`,\r\n                                        boxShadow: `inset 12px 12px 12px hsl(${teamColor(match.team1)}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match.team1)}, 100%, 29%)`,\r\n                                        opacity: `${match.winner === 2 ? 35 : 100}%`\r\n                                    }}>\r\n                                        <div className=\"teamplayers\">\r\n                                            {/* {teams?.length > 0 && teams[match.team1].map(p => <p>{p}</p>)} */}\r\n                                        </div>\r\n                                        <div className=\"teamname \">{match.team1}</div>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"teambody\" \r\n                                    style={{\r\n                                        background: `hsl(0, 0%, 24%)`,\r\n                                        boxShadow: `inset 12px 12px 12px hsl(0, 0%, 15%), inset -12px -12px 12px hsl(0, 0%, 29%)`,\r\n                                    }}>\r\n                                        <div className=\"teamplayers\">\r\n                                            {/* {teams?.length > 0 && teams[match.team1].map(p => <p>{p}</p>)} */}\r\n                                        </div>\r\n                                        <div className=\"teamname \"></div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"scorebody\">{match?.bo &&\r\n                                    [...Array(match.bo)].map((_, i ) => {\r\n                                        let gr = match.gameResults?.[i]\r\n\r\n                                        if (gr === undefined) return <div className=\"score\"></div>\r\n                                        if (gr === false) return <div className=\"score\" style={{opacity:\"0%\"}}></div>\r\n                                        return <div className=\"score\" style={{\r\n                                            background: `hsl(${teamColor(match[`team${gr}`])}, 100%, 24%)`,\r\n                                            boxShadow: `inset 8px 8px 8px hsl(${teamColor(match[`team${gr}`])}, 100%, 15%), inset -8px -8px 8px hsl(${teamColor(match[`team${gr}`])}, 100%, 29%)`,                                                \r\n                                        }}\r\n                                            onClick={() => {updateGameResult(index, i, \"empty\")}}\r\n                                        ></div>\r\n                                    })\r\n                                }</div>\r\n                                {typeof match.team2 === \"string\" && !match.team2.includes(\"âˆ€\")? \r\n                                    <div className=\"teambody\" onClick={() => {updateGameResult(index, null, \"team2\")}}\r\n                                    style={{\r\n                                        background: `hsl(${teamColor(match.team2)}, 100%, 24%)`,\r\n                                        boxShadow: `inset 12px 12px 12px hsl(${teamColor(match.team2)}, 100%, 15%), inset -12px -12px 12px hsl(${teamColor(match.team2)}, 100%, 29%)`,\r\n                                        opacity: `${match.winner === 1 ? 35 : 100}%`\r\n                                    }}>\r\n                                        <div className=\"teamname\">{match.team2}</div>\r\n                                        <div className=\"teamplayers\">\r\n                                            {/* {teams?.length > 0 && teams[match.team2].map(p => {return <p>{p}</p>})} */}\r\n                                        </div>\r\n                                    </div> \r\n                                :\r\n                                <div className=\"teambody\" \r\n                                style={{\r\n                                    background: `hsl(0, 0%, 24%)`,\r\n                                    boxShadow: `inset 12px 12px 12px hsl(0, 0%, 15%), inset -12px -12px 12px hsl(0, 0%, 29%)`,\r\n                                }}>\r\n                                    <div className=\"teamplayers\">\r\n                                        {/* {teams?.length > 0 && teams[match.team1].map(p => <p>{p}</p>)} */}\r\n                                    </div>\r\n                                    <div className=\"teamname \"></div>\r\n                                </div>\r\n\r\n                                }                                          \r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"pageSwitcher\">\r\n                <Link to=\"/skrallgaming/ThornamentBracket\" state={{\r\n                    groups: loc?.state?.groups,\r\n                    upperBracket: loc?.state?.upperBracket,\r\n                    groupMatches: loc?.state?.groupMatches,\r\n                    teams\r\n                }}>ðŸ’±Bracket</Link>\r\n            </div>\r\n        </div>\r\n    </>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}